{"ast":null,"code":"var _jsxFileName = \"/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/components/polls/VoteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './VoteForm.css'; // Assuming you have a CSS file for styling the vote form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoteForm = ({\n  poll,\n  onSubmit\n}) => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n    if (!selectedOption) {\n      setError('Please select an option to vote.');\n      return;\n    }\n    onSubmit(selectedOption);\n    setSelectedOption('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vote-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: poll.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: poll.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-group\",\n        children: poll.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `option-${index}`,\n            name: \"vote-option\"\n            // value={option}\n            // checked={selectedOption === option}\n            // onChange={(e) => setSelectedOption(e.target.value)}\n            ,\n            value: option._id // use the id or whatever uniquely identifies the option\n            ,\n            checked: selectedOption === option._id,\n            onChange: () => setSelectedOption(option._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `option-${index}`,\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(VoteForm, \"yC7vEEP4vP434YbgZF6iGw7lm/k=\");\n_c = VoteForm;\nexport default VoteForm;\nvar _c;\n$RefreshReg$(_c, \"VoteForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VoteForm","poll","onSubmit","_s","selectedOption","setSelectedOption","error","setError","handleSubmit","e","preventDefault","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","options","map","option","index","type","id","name","value","_id","checked","onChange","htmlFor","text","_c","$RefreshReg$"],"sources":["/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/components/polls/VoteForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './VoteForm.css'; // Assuming you have a CSS file for styling the vote form\n\nconst VoteForm = ({ poll, onSubmit }) => {\n  const [selectedOption, setSelectedOption] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!selectedOption) {\n      setError('Please select an option to vote.');\n      return;\n    }\n\n    onSubmit(selectedOption);\n    setSelectedOption('');\n  };\n\n  return (\n    <div className=\"vote-form-container\">\n      <h2>{poll.title}</h2>\n      <p>{poll.description}</p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"options-group\">\n          {poll.options.map((option, index) => (\n            <div key={index} className=\"option-item\">\n              <input\n                type=\"radio\"\n                id={`option-${index}`}\n                name=\"vote-option\"\n                // value={option}\n                // checked={selectedOption === option}\n                // onChange={(e) => setSelectedOption(e.target.value)}\n                value={option._id} // use the id or whatever uniquely identifies the option\n                checked={selectedOption === option._id}\n                onChange={() => setSelectedOption(option._id)}\n\n              />\n              {/* <label htmlFor={`option-${index}`}>{option}</label> */}\n              <label htmlFor={`option-${index}`}>{option.text}</label>\n\n            </div>\n          ))}\n        </div>\n        {error && <p className=\"error-message\">{error}</p>}\n        <button type=\"submit\" className=\"submit-button\">Vote</button>\n      </form>\n    </div>\n  );\n};\n\nexport default VoteForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}