{"ast":null,"code":"var _jsxFileName = \"/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/components/polls/PollCard.js\";\n// import React from 'react';\n// import './PollCard.css'; // Assuming you have a CSS file for styling the poll card\n\n// const PollCard = ({ poll, onClick }) => {\n//   // Example poll object:\n//   // const poll = {\n//   //   id: 1,\n//   //   title: 'What is your favorite programming language?',\n//   //   description: 'Vote for your favorite programming language.',\n//   //   totalVotes: 120,\n//   // };\n\n//   return (\n//     <div className=\"poll-card\" onClick={() => onClick(poll._id)}>\n//       <h3 className=\"poll-title\">{poll.title}</h3>\n//       <p className=\"poll-description\">{poll.description}</p>\n//       <p className=\"poll-votes\">Total Votes: {poll.totalVotes}</p>\n//     </div>\n//   );\n// };\n\n// export default PollCard;\nimport React from 'react';\nimport './PollCard.css'; // Assuming you have a CSS file for styling the poll card\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollCard = ({\n  poll,\n  onClick\n}) => {\n  var _poll$options, _poll$options2;\n  // Calculate total votes\n  const totalVotes = (_poll$options = poll.options) === null || _poll$options === void 0 ? void 0 : _poll$options.reduce((sum, option) => sum + (option.count || 0), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-card\",\n    onClick: () => onClick(poll._id),\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"poll-title\",\n      children: poll.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"poll-description\",\n      children: poll.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-options\",\n      children: (_poll$options2 = poll.options) === null || _poll$options2 === void 0 ? void 0 : _poll$options2.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"option-text\",\n          children: option.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"option-count\",\n          children: [\"(\", option.count, \" votes)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, option._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"poll-votes\",\n      children: [\"Total Votes: \", totalVotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = PollCard;\nexport default PollCard;\nvar _c;\n$RefreshReg$(_c, \"PollCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PollCard","poll","onClick","_poll$options","_poll$options2","totalVotes","options","reduce","sum","option","count","className","_id","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","map","text","_c","$RefreshReg$"],"sources":["/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/components/polls/PollCard.js"],"sourcesContent":["// import React from 'react';\n// import './PollCard.css'; // Assuming you have a CSS file for styling the poll card\n\n// const PollCard = ({ poll, onClick }) => {\n//   // Example poll object:\n//   // const poll = {\n//   //   id: 1,\n//   //   title: 'What is your favorite programming language?',\n//   //   description: 'Vote for your favorite programming language.',\n//   //   totalVotes: 120,\n//   // };\n\n//   return (\n//     <div className=\"poll-card\" onClick={() => onClick(poll._id)}>\n//       <h3 className=\"poll-title\">{poll.title}</h3>\n//       <p className=\"poll-description\">{poll.description}</p>\n//       <p className=\"poll-votes\">Total Votes: {poll.totalVotes}</p>\n//     </div>\n//   );\n// };\n\n// export default PollCard;\nimport React from 'react';\nimport './PollCard.css'; // Assuming you have a CSS file for styling the poll card\n\nconst PollCard = ({ poll, onClick }) => {\n  // Calculate total votes\n  const totalVotes = poll.options?.reduce((sum, option) => sum + (option.count || 0), 0);\n\n  return (\n    <div className=\"poll-card\" onClick={() => onClick(poll._id)}>\n      <h3 className=\"poll-title\">{poll.title}</h3>\n      <p className=\"poll-description\">{poll.description}</p>\n\n      <div className=\"poll-options\">\n        {poll.options?.map((option) => (\n          <div key={option._id} className=\"poll-option\">\n            <span className=\"option-text\">{option.text}</span>\n            <span className=\"option-count\">({option.count} votes)</span>\n          </div>\n        ))}\n      </div>\n\n      <p className=\"poll-votes\">Total Votes: {totalVotes}</p>\n    </div>\n  );\n};\n\nexport default PollCard;\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAA,IAAAC,aAAA,EAAAC,cAAA;EACtC;EACA,MAAMC,UAAU,IAAAF,aAAA,GAAGF,IAAI,CAACK,OAAO,cAAAH,aAAA,uBAAZA,aAAA,CAAcI,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAKD,GAAG,IAAIC,MAAM,CAACC,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EAEtF,oBACEX,OAAA;IAAKY,SAAS,EAAC,WAAW;IAACT,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACD,IAAI,CAACW,GAAG,CAAE;IAAAC,QAAA,gBAC1Dd,OAAA;MAAIY,SAAS,EAAC,YAAY;MAAAE,QAAA,EAAEZ,IAAI,CAACa;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5CnB,OAAA;MAAGY,SAAS,EAAC,kBAAkB;MAAAE,QAAA,EAAEZ,IAAI,CAACkB;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtDnB,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAE,QAAA,GAAAT,cAAA,GAC1BH,IAAI,CAACK,OAAO,cAAAF,cAAA,uBAAZA,cAAA,CAAcgB,GAAG,CAAEX,MAAM,iBACxBV,OAAA;QAAsBY,SAAS,EAAC,aAAa;QAAAE,QAAA,gBAC3Cd,OAAA;UAAMY,SAAS,EAAC,aAAa;UAAAE,QAAA,EAAEJ,MAAM,CAACY;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClDnB,OAAA;UAAMY,SAAS,EAAC,cAAc;UAAAE,QAAA,GAAC,GAAC,EAACJ,MAAM,CAACC,KAAK,EAAC,SAAO;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAFpDT,MAAM,CAACG,GAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENnB,OAAA;MAAGY,SAAS,EAAC,YAAY;MAAAE,QAAA,GAAC,eAAa,EAACR,UAAU;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACI,EAAA,GArBItB,QAAQ;AAuBd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}