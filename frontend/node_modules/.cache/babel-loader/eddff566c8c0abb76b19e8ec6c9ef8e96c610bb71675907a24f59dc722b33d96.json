{"ast":null,"code":"var _jsxFileName = \"/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/routes/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Loader from '../components/common/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    isLoading\n  } = useContext(AuthContext);\n  const location = useLocation();\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(\"Hereee\");\n  if (!isAuthenticated) {\n    console.log('PrivateRoute: isAuthenticated =', isAuthenticated);\n    // Redirect to login page but save the location they were trying to access\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated, render the protected component\n  return children;\n};\n_s(PrivateRoute, \"1c8MkRo0bHhAZpy1G5rZbISXcLM=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Navigate","useLocation","AuthContext","Loader","jsxDEV","_jsxDEV","PrivateRoute","children","_s","isAuthenticated","isLoading","location","fileName","_jsxFileName","lineNumber","columnNumber","console","log","to","state","from","replace","_c","$RefreshReg$"],"sources":["/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/routes/PrivateRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport Loader from '../components/common/Loader';\n\nconst PrivateRoute = ({ children }) => {\n  const { isAuthenticated, isLoading } = useContext(AuthContext);\n  const location = useLocation();\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  console.log(\"Hereee\")\n  if (!isAuthenticated) {\n    console.log('PrivateRoute: isAuthenticated =', isAuthenticated);\n    // Redirect to login page but save the location they were trying to access\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // If authenticated, render the protected component\n  return children;\n};\n\nexport default PrivateRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EAC9D,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,IAAIS,SAAS,EAAE;IACb,oBAAOL,OAAA,CAACF,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB;EAEAC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB,IAAI,CAACR,eAAe,EAAE;IACpBO,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAER,eAAe,CAAC;IAC/D;IACA,oBAAOJ,OAAA,CAACL,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAET;MAAS,CAAE;MAACU,OAAO;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,OAAOR,QAAQ;AACjB,CAAC;AAACC,EAAA,CAjBIF,YAAY;EAAA,QAECL,WAAW;AAAA;AAAAqB,EAAA,GAFxBhB,YAAY;AAmBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}