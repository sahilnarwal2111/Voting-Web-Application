{"ast":null,"code":"var _jsxFileName = \"/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport api, { setAuthToken } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // If there's a token, set the auth header and fetch user data\n    if (token) {\n      // api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      loadUser();\n      console.log(\"Token present in context:\", token);\n      setAuthToken(token);\n    } else {\n      setIsLoading(false);\n    }\n  }, [token]);\n\n  // Load user data from token\n  const loadUser = async () => {\n    try {\n      const res = await api.get('/api/auth/me');\n      setCurrentUser(res.data.data);\n      setIsAuthenticated(true);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error loading user:', err);\n      // Clear token on error\n      localStorage.removeItem('token');\n      setAuthToken(null);\n      setToken(null);\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n      delete api.defaults.headers.common['Authorization'];\n      setIsLoading(false);\n    }\n  };\n\n  // Register user\n  const register = async userData => {\n    try {\n      const res = await api.post('/api/auth/register', userData);\n\n      // Set token in local storage\n      // localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setAuthToken(res.data.token);\n\n      // Load user data\n      await loadUser();\n      return res.data;\n    } catch (err) {\n      throw err.response.data;\n    }\n  };\n\n  // Login user\n  const login = async userData => {\n    try {\n      const res = await api.post('/api/auth/login', userData);\n\n      // Set token in local storage\n      // localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setAuthToken(res.data.token);\n      setIsAuthenticated(true);\n\n      // Load user data\n      await loadUser();\n      return res.data;\n    } catch (err) {\n      throw err.response.data;\n    }\n  };\n\n  // Logout user\n  const logout = async () => {\n    try {\n      await api.get('/api/auth/logout');\n    } catch (err) {\n      console.error('Logout error:', err);\n    }\n\n    // Clear token and user data\n    // localStorage.removeItem('token');\n    setAuthToken(null);\n    setToken(null);\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    delete api.defaults.headers.common['Authorization'];\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      isAuthenticated,\n      isLoading,\n      register,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"JKvht7M8m/EZLqy17S/2id72UcU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","setAuthToken","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","token","setToken","localStorage","getItem","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","loadUser","console","log","res","get","data","err","error","removeItem","defaults","headers","common","register","userData","post","response","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport api, { setAuthToken } from '../utils/api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    // If there's a token, set the auth header and fetch user data\n    if (token) {\n      // api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      loadUser();\n      console.log(\"Token present in context:\", token);\n\n      setAuthToken(token);\n    } else {\n      setIsLoading(false);\n    }\n  }, [token]);\n\n  // Load user data from token\n  const loadUser = async () => {\n    try {\n      const res = await api.get('/api/auth/me');\n      setCurrentUser(res.data.data);\n      setIsAuthenticated(true);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error loading user:', err);\n      // Clear token on error\n      localStorage.removeItem('token');\n      setAuthToken(null);\n      setToken(null);\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n      delete api.defaults.headers.common['Authorization'];\n      setIsLoading(false);\n    }\n  };\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      const res = await api.post('/api/auth/register', userData);\n      \n      // Set token in local storage\n      // localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setAuthToken(res.data.token);\n      \n      // Load user data\n      await loadUser();\n      \n      return res.data;\n    } catch (err) {\n      throw err.response.data;\n    }\n  };\n\n  // Login user\n  const login = async (userData) => {\n    try {\n      const res = await api.post('/api/auth/login', userData);\n      \n      // Set token in local storage\n      // localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setAuthToken(res.data.token);\n      setIsAuthenticated(true);\n      \n      // Load user data\n      await loadUser();\n      \n      return res.data;\n    } catch (err) {\n      throw err.response.data;\n    }\n  };\n\n  // Logout user\n  const logout = async () => {\n    try {\n      await api.get('/api/auth/logout');\n    } catch (err) {\n      console.error('Logout error:', err);\n    }\n    \n    // Clear token and user data\n    // localStorage.removeItem('token');\n    setAuthToken(null);\n    setToken(null);\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    delete api.defaults.headers.common['Authorization'];\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        isAuthenticated,\n        isLoading,\n        register,\n        login,\n        logout\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}