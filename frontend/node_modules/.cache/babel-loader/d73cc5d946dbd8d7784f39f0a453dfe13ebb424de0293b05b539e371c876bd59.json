{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst usePoll = () => {\n  _s();\n  const [polls, setPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch all polls\n  const fetchPolls = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('/api/polls');\n      setPolls(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Failed to fetch polls:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch polls.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new poll\n  const createPoll = async pollData => {\n    setError(null);\n    try {\n      // const formattedData = {\n      //   ...pollData,\n      //   options: pollData.options.map(option => ({ text: option }))\n      // };\n      // const response = await axios.post('http://localhost:8080/api/polls', pollData);\n      console.log('Sending Poll Data:', pollData);\n      const token = localStorage.getItem('token');\n      console.log('Auth Token:', token);\n      const response = await axios.post('/api/polls', pollData, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        Authorization: `Bearer ${token}`\n      });\n      setPolls(prevPolls => [...prevPolls, response.data]);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Failed to create poll:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to create poll.');\n    }\n  };\n\n  // Vote on a poll\n  const voteOnPoll = async (pollId, option) => {\n    setError(null);\n    try {\n      const response = await axios.post(`/api/polls/${pollId}/vote`, {\n        option\n      });\n      setPolls(prevPolls => prevPolls.map(poll => poll.id === pollId ? {\n        ...poll,\n        ...response.data\n      } : poll));\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Failed to vote on poll:', err);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to vote on poll.');\n    }\n  };\n  useEffect(() => {\n    fetchPolls();\n  }, []);\n  return {\n    polls,\n    loading,\n    error,\n    fetchPolls,\n    createPoll,\n    voteOnPoll\n  };\n};\n_s(usePoll, \"B8AWj4szdhfOfEkx2d6ffSZGtXI=\");\nexport default usePoll;","map":{"version":3,"names":["useState","useEffect","axios","usePoll","_s","polls","setPolls","loading","setLoading","error","setError","fetchPolls","response","get","data","err","_err$response","_err$response$data","console","message","createPoll","pollData","log","token","localStorage","getItem","post","headers","Authorization","prevPolls","_err$response2","_err$response2$data","voteOnPoll","pollId","option","map","poll","id","_err$response3","_err$response3$data"],"sources":["/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/hooks/usePoll.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst usePoll = () => {\n  const [polls, setPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch all polls\n  const fetchPolls = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('/api/polls');\n      setPolls(response.data);\n    } catch (err) {\n      console.error('Failed to fetch polls:', err);\n      setError(err.response?.data?.message || 'Failed to fetch polls.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new poll\n  const createPoll = async (pollData) => {\n    setError(null);\n    try {\n      // const formattedData = {\n      //   ...pollData,\n      //   options: pollData.options.map(option => ({ text: option }))\n      // };\n      // const response = await axios.post('http://localhost:8080/api/polls', pollData);\n      console.log('Sending Poll Data:', pollData);\n      const token = localStorage.getItem('token');\n      console.log('Auth Token:', token);\n\n      const response = await axios.post(\n        '/api/polls',\n        pollData,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          Authorization: `Bearer ${token}`\n        }\n      );\n      \n      setPolls((prevPolls) => [...prevPolls, response.data]);\n    } catch (err) {\n      console.error('Failed to create poll:', err);\n      setError(err.response?.data?.message || 'Failed to create poll.');\n    }\n  };\n\n  // Vote on a poll\n  const voteOnPoll = async (pollId, option) => {\n    setError(null);\n    try {\n      const response = await axios.post(`/api/polls/${pollId}/vote`, { option });\n      setPolls((prevPolls) =>\n        prevPolls.map((poll) =>\n          poll.id === pollId ? { ...poll, ...response.data } : poll\n        )\n      );\n    } catch (err) {\n      console.error('Failed to vote on poll:', err);\n      setError(err.response?.data?.message || 'Failed to vote on poll.');\n    }\n  };\n\n  useEffect(() => {\n    fetchPolls();\n  }, []);\n\n  return { polls, loading, error, fetchPolls, createPoll, voteOnPoll };\n};\n\nexport default usePoll;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}