{"ast":null,"code":"var _jsxFileName = \"/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/pages/PollDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport usePoll from '../hooks/usePoll';\nimport VoteForm from '../components/polls/VoteForm';\nimport Loader from '../components/common/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollDetail = () => {\n  _s();\n  const {\n    polls,\n    loading,\n    error,\n    fetchPolls,\n    voteOnPoll\n  } = usePoll();\n  // const { pollId } = useParams();\n  const {\n    id: pollId\n  } = useParams();\n  const [poll, setPoll] = useState(null);\n  useEffect(() => {\n    if (!polls.length) {\n      fetchPolls();\n    } else {\n      // const selectedPoll = polls.find((p) => p.id === parseInt(pollId, 10));\n      const selectedPoll = polls.find(p => p._id === pollId);\n      console.log(polls);\n      console.log(\"Updated the poll with poll id\");\n      console.log(selectedPoll);\n      console.log(\"Poll ID from URL:\", pollId);\n      console.log(\"Available poll IDs:\", polls.map(p => p._id));\n      setPoll(selectedPoll);\n    }\n  }, [polls, pollId, fetchPolls]);\n  const handleVote = async option => {\n    await voteOnPoll(pollId, option);\n    // const updatedPoll = polls.find((p) => p.id === parseInt(pollId, 10));\n    const updatedPoll = polls.find(p => p._id === pollId);\n    setPoll(updatedPoll);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  if (!poll) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Poll not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: poll.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: poll.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total Votes: \", poll.totalVotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VoteForm, {\n      poll: poll,\n      onSubmit: handleVote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(PollDetail, \"k2UI2CJgxVWf4DuWjO4xC+HACO0=\", false, function () {\n  return [usePoll, useParams];\n});\n_c = PollDetail;\nexport default PollDetail;\nvar _c;\n$RefreshReg$(_c, \"PollDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","usePoll","VoteForm","Loader","jsxDEV","_jsxDEV","PollDetail","_s","polls","loading","error","fetchPolls","voteOnPoll","id","pollId","poll","setPoll","length","selectedPoll","find","p","_id","console","log","map","handleVote","option","updatedPoll","fileName","_jsxFileName","lineNumber","columnNumber","className","children","title","description","totalVotes","onSubmit","_c","$RefreshReg$"],"sources":["/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/pages/PollDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport usePoll from '../hooks/usePoll';\nimport VoteForm from '../components/polls/VoteForm';\nimport Loader from '../components/common/Loader';\n\nconst PollDetail = () => {\n  const { polls, loading, error, fetchPolls, voteOnPoll } = usePoll();\n  // const { pollId } = useParams();\n  const { id: pollId } = useParams();\n  const [poll, setPoll] = useState(null);\n\n  useEffect(() => {\n    if (!polls.length) {\n      fetchPolls();\n    } else {\n      // const selectedPoll = polls.find((p) => p.id === parseInt(pollId, 10));\n      const selectedPoll = polls.find((p) => p._id === pollId);\n      console.log(polls)\n      console.log(\"Updated the poll with poll id\")\n      console.log(selectedPoll)\n      console.log(\"Poll ID from URL:\", pollId);\n      console.log(\"Available poll IDs:\", polls.map(p => p._id));\n\n      setPoll(selectedPoll);\n    }\n  }, [polls, pollId, fetchPolls]);\n\n  const handleVote = async (option) => {\n    await voteOnPoll(pollId, option);\n    // const updatedPoll = polls.find((p) => p.id === parseInt(pollId, 10));\n    const updatedPoll = polls.find((p) => p._id === pollId);\n    \n    setPoll(updatedPoll);\n  };\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <p className=\"error-message\">{error}</p>;\n  }\n\n  if (!poll) {\n    return <p>Poll not found.</p>;\n  }\n\n  return (\n    <div className=\"poll-detail-container\">\n      <h1>{poll.title}</h1>\n      <p>{poll.description}</p>\n      <h3>Total Votes: {poll.totalVotes}</h3>\n      <VoteForm poll={poll} onSubmit={handleVote} />\n    </div>\n  );\n};\n\nexport default PollDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}