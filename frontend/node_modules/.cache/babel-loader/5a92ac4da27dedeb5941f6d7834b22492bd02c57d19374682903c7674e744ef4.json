{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst usePoll = () => {\n  _s();\n  const [polls, setPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch all polls\n  const fetchPolls = async () => {\n    console.log(\"Fetching Polls...\");\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:8080/api/polls');\n      setPolls(response.data.data);\n      console.log(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Failed to fetch polls:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch polls.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new poll\n  const createPoll = async pollData => {\n    setError(null);\n    try {\n      const formattedData = {\n        ...pollData,\n        options: pollData.options.map(option => ({\n          text: option\n        }))\n      };\n      // const response = await axios.post('http://localhost:8080/api/polls', pollData);\n      console.log('Sending Poll Data:', pollData);\n      const token = localStorage.getItem('token');\n      console.log('Auth Token:', token);\n      const response = await axios.post('http://localhost:8080/api/polls', formattedData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setPolls(prevPolls => [...prevPolls, response.data]);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Failed to create poll:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to create poll.');\n    }\n  };\n\n  // Vote on a poll\n  const voteOnPoll = async (pollId, optionObj) => {\n    setError(null);\n    try {\n      const token = localStorage.getItem('token');\n      console.log(\"Voting with:\", {\n        pollId,\n        optionId: optionObj._id\n      });\n      console.log(\"Here in hooks..\");\n      console.log(token);\n      console.log(pollId);\n      console.log(optionObj);\n      // const response = await axios.post(`http://localhost:8080/api/polls/${pollId}/vote`, \n      //   { option });\n\n      const response = await axios.post('http://localhost:8080/api/votes', {\n        pollId,\n        optionId: optionObj._id\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log(\"Hello after making api call for voting\");\n      console.log(response.data);\n      // setPolls((prevPolls) =>\n      //   prevPolls.map((poll) =>\n      //     poll.id === pollId ? { ...poll, ...response.data } : poll\n      //   )\n      // );\n      await fetchPolls();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Failed to vote on poll:', err);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to vote on poll.');\n    }\n  };\n  useEffect(() => {\n    fetchPolls();\n  }, []);\n  return {\n    polls,\n    loading,\n    error,\n    fetchPolls,\n    createPoll,\n    voteOnPoll\n  };\n};\n_s(usePoll, \"B8AWj4szdhfOfEkx2d6ffSZGtXI=\");\nexport default usePoll;","map":{"version":3,"names":["useState","useEffect","axios","usePoll","_s","polls","setPolls","loading","setLoading","error","setError","fetchPolls","console","log","response","get","data","err","_err$response","_err$response$data","message","createPoll","pollData","formattedData","options","map","option","text","token","localStorage","getItem","post","headers","prevPolls","_err$response2","_err$response2$data","voteOnPoll","pollId","optionObj","optionId","_id","_err$response3","_err$response3$data"],"sources":["/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/hooks/usePoll.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst usePoll = () => {\n  const [polls, setPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch all polls\n  const fetchPolls = async () => {\n    console.log(\"Fetching Polls...\")\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:8080/api/polls');\n      setPolls(response.data.data);\n      console.log(response.data)\n    } catch (err) {\n      console.error('Failed to fetch polls:', err);\n      setError(err.response?.data?.message || 'Failed to fetch polls.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new poll\n  const createPoll = async (pollData) => {\n    setError(null);\n    try {\n      const formattedData = {\n        ...pollData,\n        options: pollData.options.map(option => ({ text: option }))\n      };\n      // const response = await axios.post('http://localhost:8080/api/polls', pollData);\n      console.log('Sending Poll Data:', pollData);\n      const token = localStorage.getItem('token');\n      console.log('Auth Token:', token);\n\n      const response = await axios.post(\n        'http://localhost:8080/api/polls',\n        formattedData,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n        }\n      );\n      \n      setPolls((prevPolls) => [...prevPolls, response.data]);\n    } catch (err) {\n      console.error('Failed to create poll:', err);\n      setError(err.response?.data?.message || 'Failed to create poll.');\n    }\n  };\n\n  // Vote on a poll\n  const voteOnPoll = async (pollId, optionObj) => {\n    setError(null);\n    try {\n      const token = localStorage.getItem('token')\n      console.log(\"Voting with:\", { pollId, optionId: optionObj._id });\n      console.log(\"Here in hooks..\")\n      console.log(token)\n      console.log(pollId)\n      console.log(optionObj)\n      // const response = await axios.post(`http://localhost:8080/api/polls/${pollId}/vote`, \n      //   { option });\n\n      const response = await axios.post(\n        'http://localhost:8080/api/votes',\n        {\n          pollId,\n          optionId: optionObj._id\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        }\n      );\n      console.log(\"Hello after making api call for voting\")\n      console.log(response.data)\n      // setPolls((prevPolls) =>\n      //   prevPolls.map((poll) =>\n      //     poll.id === pollId ? { ...poll, ...response.data } : poll\n      //   )\n      // );\n      await fetchPolls();\n    } catch (err) {\n      console.error('Failed to vote on poll:', err);\n      setError(err.response?.data?.message || 'Failed to vote on poll.');\n    }\n  };\n\n  useEffect(() => {\n    fetchPolls();\n  }, []);\n\n  return { polls, loading, error, fetchPolls, createPoll, voteOnPoll };\n};\n\nexport default usePoll;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCL,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,iCAAiC,CAAC;MACnET,QAAQ,CAACQ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MAC5BJ,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZP,OAAO,CAACH,KAAK,CAAC,wBAAwB,EAAEQ,GAAG,CAAC;MAC5CP,QAAQ,CAAC,EAAAQ,aAAA,GAAAD,GAAG,CAACH,QAAQ,cAAAI,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,wBAAwB,CAAC;IACnE,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMa,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACrCZ,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMa,aAAa,GAAG;QACpB,GAAGD,QAAQ;QACXE,OAAO,EAAEF,QAAQ,CAACE,OAAO,CAACC,GAAG,CAACC,MAAM,KAAK;UAAEC,IAAI,EAAED;QAAO,CAAC,CAAC;MAC5D,CAAC;MACD;MACAd,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAES,QAAQ,CAAC;MAC3C,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3ClB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEe,KAAK,CAAC;MAEjC,MAAMd,QAAQ,GAAG,MAAMZ,KAAK,CAAC6B,IAAI,CAC/B,iCAAiC,EACjCR,aAAa,EACb;QACES,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUJ,KAAK;QAClC;MACF,CACF,CAAC;MAEDtB,QAAQ,CAAE2B,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEnB,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAiB,cAAA,EAAAC,mBAAA;MACZvB,OAAO,CAACH,KAAK,CAAC,wBAAwB,EAAEQ,GAAG,CAAC;MAC5CP,QAAQ,CAAC,EAAAwB,cAAA,GAAAjB,GAAG,CAACH,QAAQ,cAAAoB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAclB,IAAI,cAAAmB,mBAAA,uBAAlBA,mBAAA,CAAoBf,OAAO,KAAI,wBAAwB,CAAC;IACnE;EACF,CAAC;;EAED;EACA,MAAMgB,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;IAC9C5B,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3ClB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;QAAEwB,MAAM;QAAEE,QAAQ,EAAED,SAAS,CAACE;MAAI,CAAC,CAAC;MAChE5B,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BD,OAAO,CAACC,GAAG,CAACe,KAAK,CAAC;MAClBhB,OAAO,CAACC,GAAG,CAACwB,MAAM,CAAC;MACnBzB,OAAO,CAACC,GAAG,CAACyB,SAAS,CAAC;MACtB;MACA;;MAEA,MAAMxB,QAAQ,GAAG,MAAMZ,KAAK,CAAC6B,IAAI,CAC/B,iCAAiC,EACjC;QACEM,MAAM;QACNE,QAAQ,EAAED,SAAS,CAACE;MACtB,CAAC,EACD;QACER,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUJ,KAAK;QAClC;MACF,CACF,CAAC;MACDhB,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrDD,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC;MAC1B;MACA;MACA;MACA;MACA;MACA,MAAML,UAAU,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOM,GAAG,EAAE;MAAA,IAAAwB,cAAA,EAAAC,mBAAA;MACZ9B,OAAO,CAACH,KAAK,CAAC,yBAAyB,EAAEQ,GAAG,CAAC;MAC7CP,QAAQ,CAAC,EAAA+B,cAAA,GAAAxB,GAAG,CAACH,QAAQ,cAAA2B,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAczB,IAAI,cAAA0B,mBAAA,uBAAlBA,mBAAA,CAAoBtB,OAAO,KAAI,yBAAyB,CAAC;IACpE;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEN,KAAK;IAAEE,OAAO;IAAEE,KAAK;IAAEE,UAAU;IAAEU,UAAU;IAAEe;EAAW,CAAC;AACtE,CAAC;AAAChC,EAAA,CAlGID,OAAO;AAoGb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}