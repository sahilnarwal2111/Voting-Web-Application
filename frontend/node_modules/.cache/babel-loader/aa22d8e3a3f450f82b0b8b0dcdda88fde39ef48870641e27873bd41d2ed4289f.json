{"ast":null,"code":"var _jsxFileName = \"/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/components/polls/PollForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PollForm.css'; // Assuming you have a CSS file for styling the poll form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [endDate, setEndDate] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [options, setOptions] = useState(['', '']);\n  const [error, setError] = useState('');\n  const handleOptionChange = (index, value) => {\n    const updatedOptions = [...options];\n    updatedOptions[index] = value;\n    setOptions(updatedOptions);\n  };\n  const addOption = () => {\n    setOptions([...options, '']);\n  };\n  const removeOption = index => {\n    const updatedOptions = options.filter((_, i) => i !== index);\n    setOptions(updatedOptions);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n    if (!title.trim() || !description.trim()) {\n      setError('Title and description are required.');\n      return;\n    }\n    if (!endDate) {\n      setError('End date is required.');\n      return;\n    }\n    if (options.some(option => !option.trim())) {\n      setError('All options must be filled out.');\n      return;\n    }\n    if (options.length < 2) {\n      setError('At least two options are required.');\n      return;\n    }\n    const formattedEndDate = new Date(endDate).toISOString();\n\n    // onSubmit({ title, description, options });\n    onSubmit({\n      title,\n      description,\n      options,\n      endDate: formattedEndDate\n    });\n    setTitle('');\n    setDescription('');\n    setOptions(['', '']);\n    setEndDate('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Poll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"endDate\",\n          children: \"End Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          id: \"endDate\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Options:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: option,\n            onChange: e => handleOptionChange(index, e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), options.length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeOption(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addOption,\n          children: \"Add Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Create Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(PollForm, \"HdCqTdZFshIJDAO+IzI+Uoyn3yc=\");\n_c = PollForm;\nexport default PollForm;\nvar _c;\n$RefreshReg$(_c, \"PollForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PollForm","onSubmit","_s","endDate","setEndDate","title","setTitle","description","setDescription","options","setOptions","error","setError","handleOptionChange","index","value","updatedOptions","addOption","removeOption","filter","_","i","handleSubmit","e","preventDefault","trim","some","option","length","formattedEndDate","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","target","required","map","onClick","_c","$RefreshReg$"],"sources":["/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/components/polls/PollForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PollForm.css'; // Assuming you have a CSS file for styling the poll form\n\nconst PollForm = ({ onSubmit }) => {\n  const [endDate, setEndDate] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [options, setOptions] = useState(['', '']);\n  const [error, setError] = useState('');\n\n  const handleOptionChange = (index, value) => {\n    const updatedOptions = [...options];\n    updatedOptions[index] = value;\n    setOptions(updatedOptions);\n  };\n\n  const addOption = () => {\n    setOptions([...options, '']);\n  };\n\n  const removeOption = (index) => {\n    const updatedOptions = options.filter((_, i) => i !== index);\n    setOptions(updatedOptions);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!title.trim() || !description.trim()) {\n      setError('Title and description are required.');\n      return;\n    }\n    if (!endDate) {\n      setError('End date is required.');\n      return;\n    }\n\n    if (options.some((option) => !option.trim())) {\n      setError('All options must be filled out.');\n      return;\n    }\n\n    if (options.length < 2) {\n      setError('At least two options are required.');\n      return;\n    }\n    const formattedEndDate = new Date(endDate).toISOString();\n\n    // onSubmit({ title, description, options });\n    onSubmit({ title, description, options, endDate: formattedEndDate });\n    setTitle('');\n    setDescription('');\n    setOptions(['', '']);\n    setEndDate('');\n  };\n\n  return (\n    <div className=\"poll-form-container\">\n      <h2>Create a New Poll</h2>\n      <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n          <label htmlFor=\"endDate\">End Date:</label>\n          <input\n            type=\"datetime-local\"\n            id=\"endDate\"\n            value={endDate}\n            onChange={(e) => setEndDate(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description:</label>\n          <textarea\n            id=\"description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Options:</label>\n          {options.map((option, index) => (\n            <div key={index} className=\"option-group\">\n              <input\n                type=\"text\"\n                value={option}\n                onChange={(e) => handleOptionChange(index, e.target.value)}\n                required\n              />\n              {options.length > 2 && (\n                <button type=\"button\" onClick={() => removeOption(index)}>\n                  Remove\n                </button>\n              )}\n            </div>\n          ))}\n          <button type=\"button\" onClick={addOption}>\n            Add Option\n          </button>\n        </div>\n        {error && <p className=\"error-message\">{error}</p>}\n        <button type=\"submit\" className=\"submit-button\">Create Poll</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PollForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}