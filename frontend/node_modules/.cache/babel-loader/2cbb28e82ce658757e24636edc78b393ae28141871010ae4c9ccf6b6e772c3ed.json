{"ast":null,"code":"var _jsxFileName = \"/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport usePoll from '../hooks/usePoll';\nimport PollCard from '../components/polls/PollCard';\nimport Loader from '../components/common/Loader';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    polls,\n    loading,\n    error\n  } = usePoll();\n  const navigate = useNavigate();\n  const handlePollClick = pollId => {\n    navigate(`/polls/${pollId}`); // Navigate to the poll details or voting page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Polls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), polls.length > 0 ? polls.map(poll => /*#__PURE__*/_jsxDEV(PollCard, {\n        poll: poll,\n        onClick: handlePollClick\n      }, poll.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No polls available at the moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"qHX8DvZ8nGU23zagxBwDwQ2QvIE=\", false, function () {\n  return [usePoll, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","usePoll","PollCard","Loader","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","polls","loading","error","navigate","handlePollClick","pollId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","poll","onClick","id","_c","$RefreshReg$"],"sources":["/Users/sahilnarwal/Documents/Sem-8/Major Project/Pro/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React from 'react';\nimport usePoll from '../hooks/usePoll';\nimport PollCard from '../components/polls/PollCard';\nimport Loader from '../components/common/Loader';\nimport { useNavigate } from 'react-router-dom';\n\nconst Dashboard = () => {\n  const { polls, loading, error } = usePoll();\n  const navigate = useNavigate();\n\n  const handlePollClick = (pollId) => {\n    navigate(`/polls/${pollId}`); // Navigate to the poll details or voting page\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1>Dashboard</h1>\n\n      {loading && <Loader />}\n      {error && <p className=\"error-message\">{error}</p>}\n\n      <div className=\"polls-list\">\n        <h2>Available Polls</h2>\n        {polls.length > 0 ? (\n          polls.map((poll) => (\n            <PollCard key={poll.id} poll={poll} onClick={handlePollClick} />\n          ))\n        ) : (\n          <p>No polls available at the moment.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGV,OAAO,CAAC,CAAC;EAC3C,MAAMW,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,eAAe,GAAIC,MAAM,IAAK;IAClCF,QAAQ,CAAC,UAAUE,MAAM,EAAE,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCV,OAAA;MAAAU,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEjBV,OAAO,iBAAIJ,OAAA,CAACH,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrBT,KAAK,iBAAIL,OAAA;MAAGS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElDd,OAAA;MAAKS,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBV,OAAA;QAAAU,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvBX,KAAK,CAACY,MAAM,GAAG,CAAC,GACfZ,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACbjB,OAAA,CAACJ,QAAQ;QAAeqB,IAAI,EAAEA,IAAK;QAACC,OAAO,EAAEX;MAAgB,GAA9CU,IAAI,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyC,CAChE,CAAC,gBAEFd,OAAA;QAAAU,QAAA,EAAG;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACxC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CA3BID,SAAS;EAAA,QACqBN,OAAO,EACxBG,WAAW;AAAA;AAAAsB,EAAA,GAFxBnB,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}